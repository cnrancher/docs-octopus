(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{176:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return i})),a.d(t,"rightToc",(function(){return l})),a.d(t,"default",(function(){return p}));var n=a(2),r=a(9),b=(a(0),a(186)),c={id:"mqtt",title:"MQTT Adaptor"},i={id:"en/adaptors/mqtt",title:"MQTT Adaptor",description:"## Introduction",source:"@site/docs/en/adaptors/mqtt.md",permalink:"/docs-octopus/docs/en/adaptors/mqtt",editUrl:"https://github.com/cnrancher/docs-octopus/tree/master/docs/en/adaptors/mqtt.md",sidebar:"docs",previous:{title:"OPC-UA Adaptor",permalink:"/docs-octopus/docs/en/adaptors/opc-ua"},next:{title:"BLE Adaptor",permalink:"/docs-octopus/docs/en/adaptors/ble"}},l=[{value:"Introduction",id:"introduction",children:[{value:"Gossip",id:"gossip",children:[]}]},{value:"Registration Information",id:"registration-information",children:[]},{value:"Support Model",id:"support-model",children:[]},{value:"Support Platform",id:"support-platform",children:[]},{value:"Usage",id:"usage",children:[]},{value:"Authority",id:"authority",children:[]},{value:"Example",id:"example",children:[]},{value:"MQTTDevice",id:"mqttdevice",children:[{value:"MQTTDeviceSpec",id:"mqttdevicespec",children:[]},{value:"MQTTDeviceStatus",id:"mqttdevicestatus",children:[]}]}],o={rightToc:l};function p(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(b.b)("wrapper",Object(n.a)({},o,a,{components:t,mdxType:"MDXLayout"}),Object(b.b)("h2",{id:"introduction"},"Introduction"),Object(b.b)("p",null,Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"http://mqtt.org/"}),"MQTT"),' is a machine-to-machine (M2M)/"Internet of Things" connectivity protocol. It was designed as an extremely lightweight publish/subscribe messaging transport. It is useful for connections with remote locations where a small code footprint is required and/or network bandwidth is at a premium.'),Object(b.b)("p",null,"MQTT adaptor implements on ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/eclipse/paho.mqtt.golang"}),"paho.mqtt.golang")," and helps to communicate with the MQTT broker to interact with linking equipment."),Object(b.b)("h3",{id:"gossip"},"Gossip"),Object(b.b)("h4",{id:"data-structure"},"Data Structure"),Object(b.b)("p",null,"As we know, MQTT is structure-agnostic, so there is no standard ",Object(b.b)("strong",{parentName:"p"},"topic")," naming schema and ",Object(b.b)("strong",{parentName:"p"},"payload")," format. The way the publisher organizes the data structure will directly affect the usage of the subscriber. In the community, we have summarized two common patterns. Let's take a look below."),Object(b.b)("p",null,"The first pattern can be named as ",Object(b.b)("strong",{parentName:"p"},"Attributed Topic"),": the publisher flattens properties into topics, and then sends the property's payload to corresponding topic. It has a representative on Github: the ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://homieiot.github.io/"}),"Homie")," MQTT convention."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{}),'    homie/kitchen/$homie -> 4.0\n    homie/kitchen/$name  -> "Living Room"\n    homie/kitchen/$node  -> "light,door"\n    homie/kitchen/$state -> "ready"\n\n    homie/kitchen/light/$name -> "Living room light"\n    homie/kitchen/light/$type -> "LED"\n    homie/kitchen/light/$properties -> "switch,gear,parameter_power,parameter_luminance,manufacturer,production_date,service_life"\n    ...\n    \n    homie/kitchen/light/switch/$name -> "The switch of light"\n    homie/kitchen/light/switch/$settable -> "true"\n    homie/kitchen/light/switch/$datatype -> "boolean"\n    homie/kitchen/light/switch -> "false"\n    ...\n    homie/kitchen/light/parameter_power/$name -> "The power of light"\n    homie/kitchen/light/parameter_power/$settable -> "false"\n    homie/kitchen/light/parameter_power/$datatype -> "float"\n    homie/kitchen/light/parameter_power/$unit -> "watt"\n    homie/kitchen/light/parameter_power -> "3.0"\n    ...\n')),Object(b.b)("p",null,"Homie is interesting, its biggest feature is ",Object(b.b)("strong",{parentName:"p"},"self-discovery"),", which means subscriber doesn't need to know the data structure and just subscribe the root topic, and then the convention implementation client will reflect all properties, including the name, description, value, type and so on. However, ",Object(b.b)("strong",{parentName:"p"},"Attributed Topic")," pattern creates a lot of topics, so it needs a Homie-like convention to ensure standardization and extensibility. "),Object(b.b)("p",null,"Another pattern of directly compressing attributes into one payload can be named as ",Object(b.b)("strong",{parentName:"p"},"Attributed Message"),": The publisher serializes properties as one target format, such as XML, JSON or custom form, and then sends the entire serialized result to a topic. "),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{}),'    home/bedroom/light -> {"switch":"on","action":{"gear":"low"},"parameter":{"power":70,"luminance":4900},"production":{"manufacturer":"Rancher Octopus Fake Device","date":"2020-07-09T13:00:00.00Z","serviceLife":"P1Y0M0D"}}\n')),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Attributed Message")," pattern is topic saving, but the subscriber needs to know how to deserialize the payload in each topic and understand the organizational structure of data. A better way is to use the same serialization format in all topics and introduce a hierarchical description of the data structure. For example, if publisher choose JSON as the serialization format, publisher can attach the ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://json-schema.org/"}),"JSONSchema")," of data structure in another topic."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{}),'    home/bedroom/light/$schema -> {"$schema":"http://json-schema.org/draft-04/schema#","type":"object","additionalProperties":true,"properties":{"switch":{"description":"The switch of light","type":"boolean"},"action":{"description":"The action of light","type":"object","additionalProperties":true,"properties":{"gear":{"description":"The gear of power","type":"string"}}},"parameter":{"description":"The parameter of light","type":"object","additionalProperties":true,"properties":{"power":{"description":"The power of light","type":"float"},"luminance":{"description":"The luminance of light","type":"int"}}},"production":{"description":"The production information of light","type":"object","additionalProperties":true,"properties":{"manufacturer":{"description":"The manufacturer of light","type":"string"},"date":{"description":"The production date of light","type":"string"},"serviceLife":{"description":"The service life of light","type":"string"}}}}}\n')),Object(b.b)("h4",{id:"operation"},"Operation"),Object(b.b)("p",null,"In MQTT, there are only two ways of ",Object(b.b)("strong",{parentName:"p"},"pub/sub")," for data: either perform ",Object(b.b)("strong",{parentName:"p"},"pub/sub")," on the same topic, or divide ",Object(b.b)("strong",{parentName:"p"},"pub/sub")," into two topics. "),Object(b.b)("p",null,"The first way is not popular, it may need to add operation commands to the payload."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{}),'    home/light -> {"$data":{"on":true,"brightness":4,"power":{"powerDissipation":"10KWH","electricQuantity":19.99}}}\n\n    home/light <- {"$set":{"on":false}}\n    home/light -> {"$set":{"on":false}}\n')),Object(b.b)("p",null,"Although a system that uses declarative management(like ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"http://kubernetes.io/"}),"Kubernetes"),") can avoid the above imperative operation, it is necessary to introduce a ",Object(b.b)("strong",{parentName:"p"},"sub")," when the publisher did ",Object(b.b)("strong",{parentName:"p"},"pub"),", which is unacceptable in an extremely low-power environment."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{}),'    home/light -> {"on":true,"brightness":4,"power":{"powerDissipation":"10KWH","electricQuantity":19.99}}\n\n    home/light <- {"on":false}\n    home/light -> {"on":false}\n')),Object(b.b)("p",null,"Therefore, the second way will be more easily to accept. Since the properties have been flatten in ",Object(b.b)("strong",{parentName:"p"},"Attributed Topic")," pattern, the publisher can send the data to the topic with special suffix corresponding to the property. For example, the Homie prefers to use a topic with ",Object(b.b)("inlineCode",{parentName:"p"},"set")," ending to receive value changes."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{}),'    homie/light/on/$settable -> "true"\n    homie/light/on -> "true"\n\n    homie/light/on/set <- "false"\n    homie/light/on -> "false"\n')),Object(b.b)("p",null,"The same is true for ",Object(b.b)("strong",{parentName:"p"},"Attributed Message")," pattern, expect that the publisher need to choose whether to only send modified properties or all properties."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{}),'    home/light -> {"on":"true","brightness":4,"power":{"dissipation":"10KWH","quantity":19.99}}\n    \n    home/light/set <- {"on":false}\n    home/light -> {"on":false}\n')),Object(b.b)("h2",{id:"registration-information"},"Registration Information"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"Versions"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"Register Name"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"Endpoint Socket"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"Available"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"v1alpha1")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"adaptors.edge.cattle.io/mqtt")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"mqtt.sock")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"*")))),Object(b.b)("h2",{id:"support-model"},"Support Model"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"Kind"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"Group"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"Version"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"Available"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"MQTTDevice")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"devices.edge.cattle.io")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"v1alpha1")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"*")))),Object(b.b)("h2",{id:"support-platform"},"Support Platform"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"OS"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Arch"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"linux")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"amd64"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"linux")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"arm"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"linux")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"arm64"))))),Object(b.b)("h2",{id:"usage"},"Usage"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell",metastring:"script",script:!0}),"kubectl apply -f https://raw.githubusercontent.com/cnrancher/octopus/master/adaptors/mqtt/deploy/e2e/all_in_one.yaml\n")),Object(b.b)("h2",{id:"authority"},"Authority"),Object(b.b)("p",null,"Grant permissions to Octopus as below ",":"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-text"}),"  Resources                                   Non-Resource URLs  Resource Names  Verbs\n  ---------                                   -----------------  --------------  -----\n  mqttdevices.devices.edge.cattle.io         []                 []              [create delete get list patch update watch]\n  mqttdevices.devices.edge.cattle.io/status  []                 []              [get patch update]\n")),Object(b.b)("h2",{id:"example"},"Example"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Specifies a ",Object(b.b)("inlineCode",{parentName:"p"},"MQTTDevice")," device link to subscribe the information of kitchen room door."),Object(b.b)("pre",{parentName:"li"},Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-YAML"}),'apiVersion: edge.cattle.io/v1alpha1\nkind: DeviceLink\nmetadata:\n  name: kitchen-door\nspec:\n  adaptor:\n    node: edge-worker\n    name: adaptors.edge.cattle.io/mqtt\n  model:\n    apiVersion: "devices.edge.cattle.io/v1alpha1"\n    kind: "MQTTDevice"\n  template:\n    metadata:\n      labels:\n        device: kitchen-door\n    spec:\n      protocol:\n        pattern: "AttributedTopic"\n        client:\n          server: "tcp://test.mosquitto.org:1883"\n        message:\n          topic: "cattle.io/octopus/home/status/kitchen/door/:path"\n      properties:\n        - name: "state"\n          path: "state"\n          description: "The state of door"\n          type: "string"\n          annotations:\n            type: "enum"\n            format: "open,close"\n        - name: "width"\n          path: "width"\n          description: "The width of door"\n          type: "float"\n          annotations:\n            unit: "meter"\n        - name: "height"\n          path: "height"\n          description: "The height of door"\n          type: "float"\n          annotations: \n            unit: "meter"\n        - name: "material"\n          path: "material"\n          description: "The material of light"\n          type: "string"\n'))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"Specifies a ",Object(b.b)("inlineCode",{parentName:"p"},"MQTTDevice")," device link to manage the bedroom light."),Object(b.b)("pre",{parentName:"li"},Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-YAML"}),'apiVersion: edge.cattle.io/v1alpha1\nkind: DeviceLink\nmetadata:\n  name: bedroom-light\nspec:\n  adaptor:\n    node: edge-worker\n    name: adaptors.edge.cattle.io/mqtt\n  model:\n    apiVersion: "devices.edge.cattle.io/v1alpha1"\n    kind: "MQTTDevice"\n  template:\n    metadata:\n      labels:\n        device: bedroom-light\n    spec:\n      protocol:\n        pattern: "AttributedMessage"\n        client:\n          server: "tcp://test.mosquitto.org:1883"\n        message:\n          topic: "cattle.io/octopus/home/bedroom/light/:operator"\n          operator:\n            write: "set"\n      properties:\n        - name: "switch"\n          path: "switch"\n          description: "The switch of light"\n          type: "boolean"\n          readOnly: false\n        - name: "gear"\n          path: "action.gear"\n          description: "The gear of light"\n          type: "string"\n          readOnly: false\n          annotations:\n            type: "enum"\n            format: "low,mid,high"\n        - name: "power"\n          path: "parameter.power"\n          description: "The power of light"\n          type: "float"\n          annotations:\n            group: "parameter"\n            unit: "watt"\n        - name: "luminance"\n          path: "parameter.luminance"\n          description: "The luminance of light"\n          type: "int"\n          annotations:\n            group: "parameter"\n            unit: "luminance"\n        - name: "manufacturer"\n          path: "production.manufacturer"\n          description: "The manufacturer of light"\n          type: "string"\n          annotations:\n            group: "production"\n        - name: "productionDate"\n          path: "production.date"\n          description: "The production date of light"\n          type: "string"\n          annotations:\n            group: "production"\n            type: "datetime"\n            standard: "ISO 8601"\n            format: "YYYY-MM-DDThh:mm:ss.SSZ"\n        - name: "serviceLife"\n          path: "production.serviceLife"\n          description: "The service life of light"\n          type: "string"\n          annotations:\n            group: "production"\n            type: "duration"\n            standard: "ISO 8601"\n            format: "PYYMMDD"\n')))),Object(b.b)("p",null,"For more ",Object(b.b)("inlineCode",{parentName:"p"},"MQTTDevice")," device link examples, please refer to the ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/cnrancher/octopus/tree/master/adaptors/mqtt/deploy/e2e"}),"deploy/e2e")," directory."),Object(b.b)("h2",{id:"mqttdevice"},"MQTTDevice"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Parameter"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Schema"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Required"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"metadata"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"https://github.com/kubernetes/apimachinery/blob/master/pkg/apis/meta/v1/types.go#L110"}),"metav1.ObjectMeta")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"spec"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Defines the desired state of ",Object(b.b)("inlineCode",{parentName:"td"},"MQTTDevice"),"."),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"#mqttdevicespec"}),"MQTTDeviceSpec")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"status"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Defines the observed state of ",Object(b.b)("inlineCode",{parentName:"td"},"MQTTDevice"),"."),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"#mqttdevicestatus"}),"MQTTDeviceStatus")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")))),Object(b.b)("h3",{id:"mqttdevicespec"},"MQTTDeviceSpec"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Parameter"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Scheme"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Required"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"protocol"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Specifies the protocol for accessing the MQTT service."),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"#mqttdeviceprotocol"}),"MQTTDeviceProtocol")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"properties"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Specifies the properties of device."),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"#mqttdeviceproperty"}),"[]MQTTDeviceProperty")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")))),Object(b.b)("h3",{id:"mqttdevicestatus"},"MQTTDeviceStatus"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Parameter"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Scheme"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Required"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"properties"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Reports the properties of device."),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"#mqttdevicestatusproperty"}),"[]MQTTDeviceStatusProperty")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")))),Object(b.b)("h4",{id:"mqttdeviceprotocol"},"MQTTDeviceProtocol"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Parameter"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Scheme"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Required"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"pattern"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Specifies the pattern of MQTTDevice protocol."),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"#mqttdevicepattern"}),"MQTTDevicePattern")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"client"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Specifies the client settings."),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"/docs-octopus/docs/en/adaptors/mqtt-extension#mqttclientoptions"}),"MQTTClientOptions")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"message"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Specifies the message settings."),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"/docs-octopus/docs/en/adaptors/mqtt-extension#mqttmessageoptions"}),"MQTTMessageOptions")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true")))),Object(b.b)("h4",{id:"mqttdevicepattern"},"MQTTDevicePattern"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Parameter"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Scheme"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"AttributedMessage"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Compress properties into one message, one topic has its all property values."),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"AttributedTopic"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Flatten properties to topic, each topic has its own property value."),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")))),Object(b.b)("h4",{id:"mqttdeviceproperty"},"MQTTDeviceProperty"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Parameter"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Scheme"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Required"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"annotations"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Specifies the annotations of property."),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"map","[string]","string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"name"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Specifies the name of property."),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"description"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Specifies the description of property."),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"readOnly"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Specifies if the property is read-only, default to ",Object(b.b)("inlineCode",{parentName:"td"},"true"),"."),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*bool"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"type"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Specifies the type of property."),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"#mqttdevicepropertytype"}),"MQTTDevicePropertyType")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"value"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Specifies the value of property, only available in the writable property."),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"#mqttdevicepropertyvalue"}),"MQTTDevicePropertyValue")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"path"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Specifies the path for rendering the ",Object(b.b)("inlineCode",{parentName:"td"},":path")," keyword of topic, default is the same as the ",Object(b.b)("inlineCode",{parentName:"td"},"name"),". ",Object(b.b)("br",null),Object(b.b)("br",null)," In ",Object(b.b)("inlineCode",{parentName:"td"},"AttributedTopic")," pattern, this path will be rendered on topic; ",Object(b.b)("br",null)," In ",Object(b.b)("inlineCode",{parentName:"td"},"AttributedMessage")," pattern, this path should be a ",Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"#available-jsonpath"}),Object(b.b)("inlineCode",{parentName:"a"},"JSONPath"))," which can access the payload content."),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"operator"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Specifies the operator for rendering the ",Object(b.b)("inlineCode",{parentName:"td"},":operator")," keyword of topic."),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*",Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"/docs-octopus/docs/en/adaptors/mqtt-extension#mqttmessagetopicoperator"}),"MQTTMessageTopicOperator")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"qos"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Specifies the QoS of the message, only available in ",Object(b.b)("inlineCode",{parentName:"td"},"AttributedTopic")," pattern. The default value is ",Object(b.b)("inlineCode",{parentName:"td"},"1"),"."),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*",Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"/docs-octopus/docs/en/adaptors/mqtt-extension#mqttmessageqoslevel"}),"MQTTMessageQoSLevel")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"retained"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Specifies if the last published message to be retained, only available in ",Object(b.b)("inlineCode",{parentName:"td"},"AttributedTopic")," pattern. The default is ",Object(b.b)("inlineCode",{parentName:"td"},"true"),"."),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*bool"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")))),Object(b.b)("blockquote",null,Object(b.b)("p",{parentName:"blockquote"},"In fact, MQTT adaptor will return the original data received by MQTT broker. Therefore, the meaning of ",Object(b.b)("inlineCode",{parentName:"p"},"type")," is not to tell MQTT adaptor how to deal with the payload, but for user to describe what is expected.")),Object(b.b)("h4",{id:"mqttdevicestatusproperty"},"MQTTDeviceStatusProperty"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Parameter"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Scheme"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Required"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"annotations"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Reports the annotations of property."),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"map","[string]","string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"name"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Reports the name of property."),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"description"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Reports the description of property."),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"readOnly"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Reports if the property is read-only."),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*bool"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"type"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Reports the type of property. ",Object(b.b)("br",null)),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"#mqttdevicepropertytype"}),"MQTTDevicePropertyType")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"value"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Reports the value of property."),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"#mqttdevicepropertyvalue"}),"MQTTDevicePropertyValue")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"path"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Reports the path for rendering the ",Object(b.b)("inlineCode",{parentName:"td"},":path")," keyword of topic, default is the same as the ",Object(b.b)("inlineCode",{parentName:"td"},"name")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"operator"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Reports the operator for rendering the ",Object(b.b)("inlineCode",{parentName:"td"},":operator")," keyword of topic."),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*",Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"/docs-octopus/docs/en/adaptors/mqtt-extension#mqttmessagetopicoperator"}),"MQTTMessageTopicOperator")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"qos"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Reports the QoS of the message."),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*",Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"/docs-octopus/docs/en/adaptors/mqtt-extension#mqttmessageqoslevel"}),"MQTTMessageQoSLevel")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"retained"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Reports if the last published message to be retained."),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*bool"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"updatedAt"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Reports the updated timestamp of property."),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*",Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"https://github.com/kubernetes/apimachinery/blob/master/pkg/apis/meta/v1/time.go#L33"}),"metav1.Time")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")))),Object(b.b)("h4",{id:"mqttdevicepropertytype"},"MQTTDevicePropertyType"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Parameter"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Scheme"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Property data type is string."),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Property data type is int."),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Property data type is float."),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"boolean"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Property data type is boolean."),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"array"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Property data type is array."),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"object"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Property data type is object."),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")))),Object(b.b)("h4",{id:"mqttdevicepropertyvalue"},"MQTTDevicePropertyValue"),Object(b.b)("p",null,"MQTTDevicePropertyValue needs to be inputed with the corresponding content according to the ",Object(b.b)("inlineCode",{parentName:"p"},"type"),". For example:"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-YAML"}),'apiVersion: edge.cattle.io/v1alpha1\nkind: DeviceLink\n...\nspec:\n  ...\n  template:\n    ...\n    spec:\n      ...\n      properties:\n        - name: "string"\n          readOnly: false\n          type: "string"\n          value: "str"\n        - name: "int"\n          readOnly: false\n          type: "int"\n          value: 1\n        - name: "float"\n          readOnly: false\n          type: "float"\n          value: 3.3\n        - name: "bool"\n          readOnly: false\n          type: "boolean"\n          value: true\n        - name: "array"\n          readOnly: false\n          type: "array"\n          value:\n            - item-1\n            - item-2\n            - item-3\n        - name: "object"\n          readOnly: false\n          type: "object"\n          value:\n            name: "james"\n            age: 12\n')))}p.isMDXComponent=!0},186:function(e,t,a){"use strict";a.d(t,"a",(function(){return d})),a.d(t,"b",(function(){return O}));var n=a(0),r=a.n(n);function b(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){b(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},b=Object.keys(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=r.a.createContext({}),p=function(e){var t=r.a.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i({},t,{},e)),a},d=function(e){var t=p(e.components);return r.a.createElement(o.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},s=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,b=e.originalType,c=e.parentName,o=l(e,["components","mdxType","originalType","parentName"]),d=p(a),s=n,O=d["".concat(c,".").concat(s)]||d[s]||m[s]||b;return a?r.a.createElement(O,i({ref:t},o,{components:a})):r.a.createElement(O,i({ref:t},o))}));function O(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var b=a.length,c=new Array(b);c[0]=s;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,c[1]=i;for(var o=2;o<b;o++)c[o]=a[o];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,a)}s.displayName="MDXCreateElement"}}]);