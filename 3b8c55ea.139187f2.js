(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{111:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return l})),a.d(t,"rightToc",(function(){return s})),a.d(t,"default",(function(){return p}));var o=a(2),n=a(6),r=(a(0),a(126)),c={id:"install",title:"Installation"},l={id:"install",title:"Installation",description:"There are two ways to deploy Octopus, one is [Helm chart](https://helm.sh/), another one bases on [Kustomize](https://github.com/kubernetes-sigs/kustomize).",source:"@site/docs/installation.md",permalink:"/docs-octopus/docs/install",editUrl:"https://github.com/rancheredge/docs-octopus/edit/master/website/docs/installation.md",sidebar:"docs",previous:{title:"Quick-Start Guide",permalink:"/docs-octopus/docs/quick-start"},next:{title:"Create DeviceLink",permalink:"/docs-octopus/docs/devicelink/create-dl"}},s=[{value:"Octopus Helm Chart",id:"octopus-helm-chart",children:[{value:"Install Helm3",id:"install-helm3",children:[]},{value:"Add the Octopus Helm Chart repo",id:"add-the-octopus-helm-chart-repo",children:[]},{value:"Installing the Chart",id:"installing-the-chart",children:[]},{value:"Helm Chart and Octopus Support",id:"helm-chart-and-octopus-support",children:[]}]},{value:"Bases on Kustomize",id:"bases-on-kustomize",children:[{value:"Animated quick demo",id:"animated-quick-demo",children:[]}]}],i={rightToc:s};function p(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(r.b)("wrapper",Object(o.a)({},i,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"There are two ways to deploy Octopus, one is ",Object(r.b)("a",Object(o.a)({parentName:"p"},{href:"https://helm.sh/"}),"Helm chart"),", another one bases on ",Object(r.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/kubernetes-sigs/kustomize"}),"Kustomize"),"."),Object(r.b)("h2",{id:"octopus-helm-chart"},"Octopus Helm Chart"),Object(r.b)("p",null,"This repository hosts official ",Object(r.b)("a",Object(o.a)({parentName:"p"},{href:"https://helm.sh/"}),"Helm")," charts for ",Object(r.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/cnrancher/octopus"}),"Octopus"),". These charts are used to deploy Octopus to the Kubernetes/k3s Cluster."),Object(r.b)("h3",{id:"install-helm3"},"Install Helm3"),Object(r.b)("p",null,"Read and follow the ",Object(r.b)("a",Object(o.a)({parentName:"p"},{href:"https://helm.sh/docs/intro/install/"}),"Helm installation guide"),"."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Note: The charts in this repository require Helm version 3.x or later.")," "),Object(r.b)("h3",{id:"add-the-octopus-helm-chart-repo"},"Add the Octopus Helm Chart repo"),Object(r.b)("p",null,"In order to be able to use the charts in this repository, add the name and URL to your Helm client:"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-console"}),"helm repo add cnrancher http://charts.cnrancher.cn/octopus\nhelm repo update\n")),Object(r.b)("h3",{id:"installing-the-chart"},"Installing the Chart"),Object(r.b)("p",null,"To install the Octopus Chart into your Kubernetes/k3s cluster use:"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{}),"helm install --namespace octopus-system octopus cnrancher/octopus\n")),Object(r.b)("p",null,"After installation succeeds, you can get a status of Chart"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{}),"helm status octopus\n")),Object(r.b)("p",null,"If you want to delete your Chart, use this command:"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{}),"helm delete  octopus\n")),Object(r.b)("p",null,"The command removes nearly all the Kubernetes components associated with the\nchart and deletes the release."),Object(r.b)("h3",{id:"helm-chart-and-octopus-support"},"Helm Chart and Octopus Support"),Object(r.b)("p",null,"Visit the ",Object(r.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/cnrancher/octopus/issues/"}),"Octopus github issues")," for support."),Object(r.b)("h2",{id:"bases-on-kustomize"},"Bases on Kustomize"),Object(r.b)("p",null,"Kustomize is an interesting tool, in solving Kubernetes application management, it uses a different idea then Helm, which calls ",Object(r.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/declarative-application-management.md"}),"Declarative Application Management"),". "),Object(r.b)("p",null,"The kustomize layout of Octopus looks like as follows:"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{}),"deploy/manifests\n    - crd/base - stores raw CRD files \n    - overlays - stores the topmost overlays\n    - rbac - stores RBAC files\n    - workload - stores workload files\n")),Object(r.b)("p",null,"During ",Object(r.b)("a",Object(o.a)({parentName:"p"},{href:"./develop.md"}),"Octopus generated stage"),", these topmost overlay will be rendered accordingly:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"default")," overlay -> ",Object(r.b)("inlineCode",{parentName:"li"},"deploy/e2e/all_in_one.yaml")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"without_webhook")," overlay -> ",Object(r.b)("inlineCode",{parentName:"li"},"deploy/e2e/all_in_one_without_webhook.yaml"))),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"If deploying ",Object(r.b)("inlineCode",{parentName:"p"},"deploy/e2e/all_in_one.yaml"),", it's required to deploy ",Object(r.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/jetstack/cert-manager"}),"cert manager")," for provisioning the certificates, please follow ",Object(r.b)("a",Object(o.a)({parentName:"p"},{href:"https://docs.cert-manager.io/en/latest/getting-started/install/kubernetes.html"}),"the cert manager document")," to install it.")),Object(r.b)("h3",{id:"animated-quick-demo"},"Animated quick demo"),Object(r.b)("p",null,"Deploy Octopus without admission webhooks for developing:"),Object(r.b)("p",null,Object(r.b)("a",Object(o.a)({parentName:"p"},{href:"https://asciinema.org/a/blEcEzM1BGzwDTF48sNLRDWk0"}),Object(r.b)("img",Object(o.a)({parentName:"a"},{src:"https://asciinema.org/a/blEcEzM1BGzwDTF48sNLRDWk0.svg",alt:"asciicast"})))),Object(r.b)("details",null,Object(r.b)("summary",null,"process instruction"),Object(r.b)("code",null,"# deploy octopus without webhook kubectl apply -f deploy/e2e/all_in_one_without_webhook.yaml # confirm the octopus deployment kubectl get all -n octopus-system kubectl get crd | grep devicelinks # deploy a devicelink cat adaptors/dummy/deploy/e2e/dl.yaml kubectl apply -f adaptors/dummy/deploy/e2e/dl.yaml # confirm the state of devicelink kubectl get dl correct -n default # deploy dummy adaptor and dummydevice model kubectl apply -f adaptors/dummy/deploy/e2e/all_in_one.yaml # confirm the dummy adaptor deployment kubectl get daemonset octopus-adaptor-dummy-adaptor -n octopus-system kubectl get crd | grep dummydevices # confirm the state of devicelink kubectl get dl correct -n default # watch the device instance kubectl get dummydevice correct -n default -w")),Object(r.b)("p",null,"Deploy Octopus with admission webhooks for producing:"),Object(r.b)("p",null,Object(r.b)("a",Object(o.a)({parentName:"p"},{href:"https://asciinema.org/a/Yfvuw88rUumSzzJcHn3PJp3p7"}),Object(r.b)("img",Object(o.a)({parentName:"a"},{src:"https://asciinema.org/a/Yfvuw88rUumSzzJcHn3PJp3p7.svg",alt:"asciicast"})))),Object(r.b)("details",null,Object(r.b)("summary",null,"process instruction"),Object(r.b)("code",null,"# deploy cert-manager kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v0.14.0/cert-manager.yaml # confirm the cert-manager deployment kubectl get all -n cert-manager # deploy octopus with webhook kubectl apply -f deploy/e2e/all_in_one.yaml # confirm the octopus deployment kubectl get all -n octopus-system # verify the crd of devicelinks kubectl get crd | grep devicelinks # verify the webhooks kubectl get mutatingwebhookconfigurations octopus-mutating-webhook-configuration -n octopus-system -o yaml kubectl get validatingwebhookconfigurations octopus-validating-webhook-configuration -n octopus-system -o yaml")))}p.isMDXComponent=!0},126:function(e,t,a){"use strict";a.d(t,"a",(function(){return u})),a.d(t,"b",(function(){return d}));var o=a(0),n=a.n(o);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,o)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,o,n=function(e,t){if(null==e)return{};var a,o,n={},r=Object.keys(e);for(o=0;o<r.length;o++)a=r[o],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)a=r[o],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=n.a.createContext({}),p=function(e){var t=n.a.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):l({},t,{},e)),a},u=function(e){var t=p(e.components);return n.a.createElement(i.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},m=Object(o.forwardRef)((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,i=s(e,["components","mdxType","originalType","parentName"]),u=p(a),m=o,d=u["".concat(c,".").concat(m)]||u[m]||b[m]||r;return a?n.a.createElement(d,l({ref:t},i,{components:a})):n.a.createElement(d,l({ref:t},i))}));function d(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,c=new Array(r);c[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,c[1]=l;for(var i=2;i<r;i++)c[i]=a[i];return n.a.createElement.apply(null,c)}return n.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"}}]);