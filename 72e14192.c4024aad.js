(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{114:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return u}));var o=n(2),r=n(6),a=(n(0),n(126)),c={id:"quick-start",title:"Quick-Start Guide"},i={id:"quick-start",title:"Quick-Start Guide",description:"## Walk-through",source:"@site/docs/quick-start.md",permalink:"/docs/quick-start",editUrl:"https://github.com/rancheredge/docs-octopus/edit/master/website/docs/quick-start.md",sidebar:"docs",previous:{title:"Architecture",permalink:"/docs/architecture"},next:{title:"Installation",permalink:"/docs/install"}},s=[{value:"Walk-through",id:"walk-through",children:[{value:"Deploy Octopus",id:"deploy-octopus",children:[]},{value:"Deploy Device Model &amp; Device Adaptor",id:"deploy-device-model--device-adaptor",children:[]}]}],p={rightToc:s};function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"walk-through"},"Walk-through"),Object(a.b)("p",null,"In this walkthrough, we try to use Octopus to manage a dummy device. We will perform the following steps in order:"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"Deploy Octopus"),Object(a.b)("li",{parentName:"ol"},"Deploy Device Model & Device Adaptor"),Object(a.b)("li",{parentName:"ol"},"Create Device Link"),Object(a.b)("li",{parentName:"ol"},"Manage Device")),Object(a.b)("h3",{id:"deploy-octopus"},"Deploy Octopus"),Object(a.b)("p",null,"There are ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"docs/octopus/deployment.md"}),"two ways")," to deploy Octopus, for convenience, we use the deployment manifest file to bring up the Octopus. The installer YAML file is under the ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"./deploy/e2e"}),Object(a.b)("inlineCode",{parentName:"a"},"deploy/e2e"))," directory:"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-shell",metastring:"script",script:!0}),"$ kubectl apply -f https://raw.githubusercontent.com/cnrancher/octopus/master/deploy/e2e/all_in_one_without_webhook.yaml\nnamespace/octopus-system created\ncustomresourcedefinition.apiextensions.k8s.io/devicelinks.edge.cattle.io created\nrole.rbac.authorization.k8s.io/octopus-leader-election-role created\nclusterrole.rbac.authorization.k8s.io/octopus-manager-role created\nrolebinding.rbac.authorization.k8s.io/octopus-leader-election-rolebinding created\nclusterrolebinding.rbac.authorization.k8s.io/octopus-manager-rolebinding created\nservice/octopus-brain created\nservice/octopus-limb created\ndeployment.apps/octopus-brain created\ndaemonset.apps/octopus-limb created\n\n")),Object(a.b)("p",null,"After installed, we can verify the status of Octopus as below:"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-shell",metastring:"script",script:!0}),"$ kubectl get all -n octopus-system\nNAME                                 READY   STATUS    RESTARTS   AGE\npod/octopus-limb-d4nbz               1/1     Running   0          40s\npod/octopus-limb-5g9q8               1/1     Running   0          40s\npod/octopus-limb-zsx7c               1/1     Running   0          40s\npod/octopus-brain-7767fcc4cf-g8str   1/1     Running   0          40s\npod/octopus-limb-mcv5v               1/1     Running   0          40s\n\nNAME                    TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE\nservice/octopus-brain   ClusterIP   10.43.150.114   <none>        8080/TCP   40s\nservice/octopus-limb    ClusterIP   10.43.64.223    <none>        8080/TCP   40s\n\nNAME                          DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE\ndaemonset.apps/octopus-limb   4         4         4       4            4           <none>          40s\n\nNAME                            READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/octopus-brain   1/1     1            1           40s\n\nNAME                                       DESIRED   CURRENT   READY   AGE\nreplicaset.apps/octopus-brain-7767fcc4cf   1         1         1       40s\n\n")),Object(a.b)("h3",{id:"deploy-device-model--device-adaptor"},"Deploy Device Model & Device Adaptor"),Object(a.b)("p",null,"Octopus has prepared a dummy adaptor for testing, which does not need to be connected to a real device. So we can imagine that the dummy device is a realistic device in here."),Object(a.b)("p",null,"At first, we need to describe the device as a resource in Kubernetes. This description process is modeling the device. In Kubernetes, the best way to describe resources is to use ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/#customresourcedefinitions"}),"CustomResourceDefinitions"),", so ",Object(a.b)("strong",{parentName:"p"},"defining a device model in Octopus is actually defining the CustomResourceDefinitions.")," Take a quick look at this ",Object(a.b)("inlineCode",{parentName:"p"},"DummyDevice")," model: "),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-yaml"}),'apiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  ...\n  name: dummydevices.devices.edge.cattle.io\nspec:\n  group: devices.edge.cattle.io\n  names:\n    kind: DummyDevice\n    listKind: DummyDeviceList\n    plural: dummydevices\n    singular: dummydevice\n  scope: Namespaced\n  versions:\n  - name: v1alpha1\n    schema:\n      openAPIV3Schema:\n        description: DummyDevice is the Schema for the dummy device API\n        properties:\n          ...\n          spec:\n            description: DummyDeviceSpec defines the desired state of DummyDevice\n            properties:\n              gear:\n                description: Specifies how fast the device should be\n                enum:\n                - slow\n                - middle\n                - fast\n                type: string\n              "on":\n                description: Turn on the device\n                type: boolean\n            required:\n            - "on"\n            type: object\n          status:\n            description: DummyDeviceStatus defines the observed state of DummyDevice\n            properties:\n              gear:\n                description: Reports the current gear\n                enum:\n                - slow\n                - middle\n                - fast\n                type: string\n              rotatingSpeed:\n                description: Reports the detail number of speed\n                format: int32\n                type: integer\n            type: object\n        type: object\n    ...\nstatus:\n    ...\n\n')),Object(a.b)("p",null,"The dummy adaptor installer YAML file is under the ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"./adaptors/dummy/deploy/e2e"}),Object(a.b)("inlineCode",{parentName:"a"},"adaptors/dummy/deploy/e2e"))," directory, the ",Object(a.b)("inlineCode",{parentName:"p"},"all_in_one.yaml")," includes the device model and the device adaptor, we can apply them into the cluster directly:"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-shell",metastring:"script",script:!0}),"$ kubectl apply -f https://raw.githubusercontent.com/cnrancher/octopus/master/adaptors/dummy/deploy/e2e/all_in_one.yaml\ncustomresourcedefinition.apiextensions.k8s.io/dummydevices.devices.edge.cattle.io created\nclusterrole.rbac.authorization.k8s.io/octopus-adaptor-dummy-manager-role created\nclusterrolebinding.rbac.authorization.k8s.io/octopus-adaptor-dummy-manager-rolebinding created\ndaemonset.apps/octopus-adaptor-dummy-adaptor created\n\n$ kubectl get all -n octopus-system\nNAME                                      READY   STATUS    RESTARTS   AGE\npod/octopus-limb-d4nbz                    1/1     Running   0          4m56s\npod/octopus-limb-5g9q8                    1/1     Running   0          4m56s\npod/octopus-limb-zsx7c                    1/1     Running   0          4m56s\npod/octopus-brain-7767fcc4cf-g8str        1/1     Running   0          4m56s\npod/octopus-limb-mcv5v                    1/1     Running   0          4m56s\npod/octopus-adaptor-dummy-adaptor-vgpgf   1/1     Running   0          24s\npod/octopus-adaptor-dummy-adaptor-kg5rw   1/1     Running   0          25s\npod/octopus-adaptor-dummy-adaptor-2m4xf   1/1     Running   0          26s\npod/octopus-adaptor-dummy-adaptor-tn5kz   1/1     Running   0          24s\n\nNAME                    TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE\nservice/octopus-brain   ClusterIP   10.43.150.114   <none>        8080/TCP   4m56s\nservice/octopus-limb    ClusterIP   10.43.64.223    <none>        8080/TCP   4m56s\n\nNAME                                           DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE\ndaemonset.apps/octopus-limb                    4         4         4       4            4           <none>          4m56s\ndaemonset.apps/octopus-adaptor-dummy-adaptor   4         4         4       4            4           <none>          3m19s\n\nNAME                            READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/octopus-brain   1/1     1            1           4m56s\n\nNAME                                       DESIRED   CURRENT   READY   AGE\nreplicaset.apps/octopus-brain-7767fcc4cf   1         1         1       4m56s\n\n")),Object(a.b)("p",null,"It is worth noting that we have granted the permission to Octopus for managing ",Object(a.b)("inlineCode",{parentName:"p"},"DummyDevice"),":"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-shell",metastring:"script",script:!0}),"$ kubectl get clusterrolebinding | grep octopus\noctopus-manager-rolebinding                            6m42s\noctopus-adaptor-dummy-manager-rolebinding              5m5s\n\n")))}u.isMDXComponent=!0},126:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return b}));var o=n(0),r=n.n(o);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),u=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i({},t,{},e)),n},l=function(e){var t=u(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=Object(o.forwardRef)((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),l=u(n),m=o,b=l["".concat(c,".").concat(m)]||l[m]||d[m]||a;return n?r.a.createElement(b,i({ref:t},p,{components:n})):r.a.createElement(b,i({ref:t},p))}));function b(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,c=new Array(a);c[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var p=2;p<a;p++)c[p]=n[p];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);