(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{182:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return a})),r.d(t,"metadata",(function(){return s})),r.d(t,"rightToc",(function(){return u})),r.d(t,"default",(function(){return l}));var n=r(2),o=r(9),c=(r(0),r(186)),i=r(188),a={id:"about",title:"About Octopus",sidebar_label:"About Octopus"},s={id:"en/about",title:"About Octopus",description:"## Octopus Introduction",source:"@site/docs/en/index.md",permalink:"/docs-octopus/docs/en/about",editUrl:"https://github.com/cnrancher/docs-octopus/tree/master/docs/en/index.md",sidebar_label:"About Octopus",sidebar:"docs",next:{title:"Quick-Start Guide",permalink:"/docs-octopus/docs/en/quick-start"}},u=[{value:"Octopus Introduction",id:"octopus-introduction",children:[]},{value:"Concepts",id:"concepts",children:[]},{value:"Architecture Setup with k3s Cluster",id:"architecture-setup-with-k3s-cluster",children:[]}],p={rightToc:u};function l(e){var t=e.components,r=Object(o.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},p,r,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"octopus-introduction"},"Octopus Introduction"),Object(c.b)("p",null,"Octopus is a light-weight and cloud-native device management system for Kubernetes and ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://k3s.io/"}),"k3s"),", it does not need to replace any basic components of the Kubernetes cluster. After Octopus deployed, the cluster can have the ability to manage edge devices as custom k8s resources."),Object(c.b)("h2",{id:"concepts"},"Concepts"),Object(c.b)("p",null,"Like the real octopus, Octopus consists of the brain and limbs. The brain can only deploy one or choose the leader(HA mode), it is responsible for processing that relatively centralized information, for example validating whether the node exists and device model(type) exists.\nThe limbs need to be deployed on the edge nodes that the device can connect to, they talk to real-world devices through adaptors. Therefore, Octopus manages devices by managing its device connections(i.e, DeviceLink)."),Object(c.b)("h2",{id:"architecture-setup-with-k3s-cluster"},"Architecture Setup with k3s Cluster"),Object(c.b)("img",{alt:"architecture",src:Object(i.a)("img/architecture.png")}))}l.isMDXComponent=!0},186:function(e,t,r){"use strict";r.d(t,"a",(function(){return l})),r.d(t,"b",(function(){return f}));var n=r(0),o=r.n(n);function c(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){c(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=o.a.createContext({}),p=function(e){var t=o.a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):a({},t,{},e)),r},l=function(e){var t=p(e.components);return o.a.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=Object(n.forwardRef)((function(e,t){var r=e.components,n=e.mdxType,c=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),l=p(r),b=n,f=l["".concat(i,".").concat(b)]||l[b]||d[b]||c;return r?o.a.createElement(f,a({ref:t},u,{components:r})):o.a.createElement(f,a({ref:t},u))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=r.length,i=new Array(c);i[0]=b;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a.mdxType="string"==typeof e?e:n,i[1]=a;for(var u=2;u<c;u++)i[u]=r[u];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"},187:function(e,t,r){"use strict";var n=r(0),o=r(52);t.a=function(){return Object(n.useContext)(o.a)}},188:function(e,t,r){"use strict";r.d(t,"a",(function(){return o}));r(189);var n=r(187);function o(e){var t=(Object(n.a)().siteConfig||{}).baseUrl,r=void 0===t?"/":t;if(!e)return e;return/^(https?:|\/\/)/.test(e)?e:e.startsWith("/")?r+e.slice(1):r+e}},189:function(e,t,r){"use strict";var n=r(12),o=r(24),c=r(190),i="".startsWith;n(n.P+n.F*r(191)("startsWith"),"String",{startsWith:function(e){var t=c(this,e,"startsWith"),r=o(Math.min(arguments.length>1?arguments[1]:void 0,t.length)),n=String(e);return i?i.call(t,n,r):t.slice(r,r+n.length)===n}})},190:function(e,t,r){var n=r(76),o=r(25);e.exports=function(e,t,r){if(n(t))throw TypeError("String#"+r+" doesn't accept regex!");return String(o(e))}},191:function(e,t,r){var n=r(3)("match");e.exports=function(e){var t=/./;try{"/./"[e](t)}catch(r){try{return t[n]=!1,!"/./"[e](t)}catch(o){}}return!0}}}]);