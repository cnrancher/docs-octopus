(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{114:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return r})),t.d(n,"rightToc",(function(){return s})),t.d(n,"default",(function(){return d}));var a=t(2),o=t(6),c=(t(0),t(127)),i={id:"quick-start",title:"Quick-Start Guide"},r={id:"quick-start",title:"Quick-Start Guide",description:"## Spin-up k3s Cluster Using [k3d](https://github.com/rancher/k3d) (optional)",source:"@site/docs/quick-start.md",permalink:"/docs-octopus/docs/quick-start",editUrl:"https://github.com/rancheredge/docs-octopus/edit/master/website/docs/quick-start.md",sidebar:"docs",previous:{title:"Architecture",permalink:"/docs-octopus/docs/architecture"},next:{title:"Installation",permalink:"/docs-octopus/docs/install"}},s=[{value:"Spin-up k3s Cluster Using k3d (optional)",id:"spin-up-k3s-cluster-using-k3d-optional",children:[]},{value:"Walkthrough",id:"walkthrough",children:[{value:"1. Deploy Octopus",id:"1-deploy-octopus",children:[]},{value:"2. Deploy Device Model &amp; Device Adaptor",id:"2-deploy-device-model--device-adaptor",children:[]},{value:"3. Create Device Link",id:"3-create-device-link",children:[]},{value:"4. Manage Device",id:"4-manage-device",children:[]}]},{value:"Workflow",id:"workflow",children:[]}],l={rightToc:s};function d(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"spin-up-k3s-cluster-using-k3d-optional"},"Spin-up k3s Cluster Using ",Object(c.b)("a",Object(a.a)({parentName:"h2"},{href:"https://github.com/rancher/k3d"}),"k3d")," (optional)"),Object(c.b)("p",null,Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/rancher/k3s"}),"k3s")," is the lightweight Kubernetes distribution by Rancher, k3d creates containerized k3s clusters.\nThis means, that you can spin-up a multi-node k3s cluster on a single machine using docker."),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},Object(c.b)("p",{parentName:"li"},"Spin-up a local k3d cluster with 3 worker nodes on default."),Object(c.b)("pre",{parentName:"li"},Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell",metastring:"script",script:!0}),"$ curl -sfL https://get.k3s.io | sh -\n")),Object(c.b)("div",Object(a.a)({parentName:"li"},{className:"admonition admonition-note alert alert--secondary"}),Object(c.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(c.b)("h5",{parentName:"div"},Object(c.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(c.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(c.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(c.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(c.b)("p",{parentName:"div"},"You are expected to see the following logs if installation is succeed, use ",Object(c.b)("inlineCode",{parentName:"p"},"CTRL+C")," or hit ",Object(c.b)("inlineCode",{parentName:"p"},"Enter")," to stop the local cluster."))),Object(c.b)("pre",{parentName:"li"},Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-logs"}),"[INFO] [0604 17:09:41] creating edge cluster with v1.17.2\nINFO[0000] Created cluster network with ID d5fcd8f2a5951d9ef4dba873f57dd7984f25cf81ab51776c8bac88c559c2d363\nINFO[0000] Created docker volume  k3d-edge-images\nINFO[0000] Creating cluster [edge]\nINFO[0000] Creating server using docker.io/rancher/k3s:v1.17.2-k3s1...\nINFO[0008] SUCCESS: created cluster [edge]\nINFO[0008] You can now use the cluster with:\n\nexport KUBECONFIG=\"$(k3d get-kubeconfig --name='edge')\"\nkubectl cluster-info\n[WARN] [0604 17:09:50] default kubeconfig has been backup in /Users/guangbochen/.kube/rancher-k3s.yaml_k3d_bak\n[INFO] [0604 17:09:50] edge cluster's kubeconfig wrote in /Users/guangbochen/.kube/rancher-k3s.yaml now\n[INFO] [0604 17:09:50] waiting node edge-control-plane for ready\nINFO[0000] Adding 1 agent-nodes to k3d cluster edge...\nINFO[0000] Created agent-node with ID 3197e431b1a060fbb591b4c315c4949f1b472213312ff8e04c898e3353e05bdc\n[INFO] [0604 17:10:01] waiting node edge-worker for ready\nINFO[0000] Adding 1 agent-nodes to k3d cluster edge...\nINFO[0000] Created agent-node with ID d9bb3e589e745797f3b189962d14de77cfc6afe86d1b6af93a43d808a9c72b5c\n[INFO] [0604 17:10:13] waiting node edge-worker1 for ready\nINFO[0000] Adding 1 agent-nodes to k3d cluster edge...\nINFO[0000] Created agent-node with ID bc69aa9867aa2081df0cf425661ae002142bd667d3d618bc5a5b34bc092d7562\n[INFO] [0604 17:10:25] waiting node edge-worker2 for ready\n[WARN] [0604 17:10:37] please input CTRL+C to stop the local cluster\n"))),Object(c.b)("li",{parentName:"ol"},Object(c.b)("p",{parentName:"li"},"Open a new terminal and set the ",Object(c.b)("inlineCode",{parentName:"p"},"KUBECONFIG")," to access the local k3s cluster."),Object(c.b)("pre",{parentName:"li"},Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell",metastring:"script",script:!0}),"$ export KUBECONFIG=~/.kube/rancher-k3s.yaml\n"))),Object(c.b)("li",{parentName:"ol"},Object(c.b)("p",{parentName:"li"},"Validate the local k3s cluster by checking its node."),Object(c.b)("pre",{parentName:"li"},Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell",metastring:"script",script:!0}),"$ kubectl get node\nNAME                 STATUS   ROLES    AGE     VERSION\nedge-control-plane   Ready    master   3m46s   v1.17.2+k3s1\nedge-worker2         Ready    <none>   3m8s    v1.17.2+k3s1\nedge-worker          Ready    <none>   3m33s   v1.17.2+k3s1\nedge-worker1         Ready    <none>   3m21s   v1.17.2+k3s1\n")))),Object(c.b)("h2",{id:"walkthrough"},"Walkthrough"),Object(c.b)("p",null,"In this walkthrough, we will use Octopus to manage a ",Object(c.b)("inlineCode",{parentName:"p"},"dummy")," device and perform the following steps in order:"),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},"Deploy the Octopus"),Object(c.b)("li",{parentName:"ol"},"Deploy Device Model & Device Adaptor"),Object(c.b)("li",{parentName:"ol"},"Create Device Link"),Object(c.b)("li",{parentName:"ol"},"Manage Device")),Object(c.b)("h3",{id:"1-deploy-octopus"},"1. Deploy Octopus"),Object(c.b)("p",null,"There are ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"./install"}),"two ways")," to deploy the Octopus, for convenience, we use the deployment manifest file to bring up the Octopus. The installer YAML file is under the ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/cnrancher/octopus/tree/master/deploy/e2e"}),Object(c.b)("inlineCode",{parentName:"a"},"deploy/e2e"))," directory:"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell",metastring:"script",script:!0}),"$ kubectl apply -f https://raw.githubusercontent.com/cnrancher/octopus/master/deploy/e2e/all_in_one_without_webhook.yaml\n")),Object(c.b)("p",null,"expected result:"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-log"}),"namespace/octopus-system created\ncustomresourcedefinition.apiextensions.k8s.io/devicelinks.edge.cattle.io created\nrole.rbac.authorization.k8s.io/octopus-leader-election-role created\nclusterrole.rbac.authorization.k8s.io/octopus-manager-role created\nrolebinding.rbac.authorization.k8s.io/octopus-leader-election-rolebinding created\nclusterrolebinding.rbac.authorization.k8s.io/octopus-manager-rolebinding created\nservice/octopus-brain created\nservice/octopus-limb created\ndeployment.apps/octopus-brain created\ndaemonset.apps/octopus-limb created\n")),Object(c.b)("p",null,"After installed, we can verify the status of Octopus as below:"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell",metastring:"script",script:!0}),"$ kubectl get all -n octopus-system\nNAME                                 READY   STATUS    RESTARTS   AGE\npod/octopus-limb-w8vcf               1/1     Running   0          14s\npod/octopus-limb-862kh               1/1     Running   0          14s\npod/octopus-limb-797d8               1/1     Running   0          14s\npod/octopus-limb-8w462               1/1     Running   0          14s\npod/octopus-brain-65fdb4ff99-zvw62   1/1     Running   0          14s\n\nNAME                    TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)    AGE\nservice/octopus-brain   ClusterIP   10.43.92.81    <none>        8080/TCP   14s\nservice/octopus-limb    ClusterIP   10.43.143.49   <none>        8080/TCP   14s\n\nNAME                          DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE\ndaemonset.apps/octopus-limb   4         4         4       4            4           <none>          14s\n\nNAME                            READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/octopus-brain   1/1     1            1           14s\n\nNAME                                       DESIRED   CURRENT   READY   AGE\nreplicaset.apps/octopus-brain-65fdb4ff99   1         1         1       14s\n\n")),Object(c.b)("h3",{id:"2-deploy-device-model--device-adaptor"},"2. Deploy Device Model & Device Adaptor"),Object(c.b)("p",null,"Octopus has prepared a dummy adaptor for testing, which does not need to be connected to a real device. So we can assume that the dummy device is a real physical device in here."),Object(c.b)("p",null,"First we need to describe the device as a resource in Kubernetes. This description process is modeling the device. In Kubernetes, the best way to describe resources is to use ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/#customresourcedefinitions"}),"CustomResourceDefinitions"),", so ",Object(c.b)("strong",{parentName:"p"},"defining a device model in Octopus is actually defining the CustomResourceDefinition.")," Take a quick look at this ",Object(c.b)("inlineCode",{parentName:"p"},"DummySpecialDevice")," model(pretend it is a smart fan): "),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'apiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n    controller-gen.kubebuilder.io/version: v0.2.5\n    devices.edge.cattle.io/description: dummy device description\n    devices.edge.cattle.io/device-property: ""\n    devices.edge.cattle.io/enable: "true"\n    devices.edge.cattle.io/icon: ""\n  labels:\n    app.kubernetes.io/name: octopus-adaptor-dummy\n    app.kubernetes.io/version: master\n  name: dummyspecialdevices.devices.edge.cattle.io\nspec:\n  group: devices.edge.cattle.io\n  names:\n    kind: DummySpecialDevice\n    listKind: DummySpecialDeviceList\n    plural: dummyspecialdevices\n    singular: dummyspecialdevice\n  scope: Namespaced\n  versions:\n  - name: v1alpha1\n    schema:\n      openAPIV3Schema:\n        description: DummySpecialDevice is the Schema for the dummy special device\n          API.\n        properties:\n          ...\n          spec:\n            description: DummySpecialDeviceSpec defines the desired state of DummySpecialDevice.\n            properties:\n              gear:\n                description: Specifies how fast the dummy special device should be.\n                enum:\n                - slow\n                - middle\n                - fast\n                type: string\n              "on":\n                description: Turn on the dummy special device.\n                type: boolean\n              protocol:\n                description: Protocol for accessing the dummy special device.\n                properties:\n                  location:\n                    type: string\n                required:\n                - location\n                type: object\n            required:\n            - "on"\n            - protocol\n            type: object\n          status:\n            description: DummySpecialDeviceStatus defines the observed state of DummySpecialDevice.\n            properties:\n              gear:\n                description: Reports the current gear of dummy special device.\n                enum:\n                - slow\n                - middle\n                - fast\n                type: string\n              rotatingSpeed:\n                description: Reports the detail number of speed of dummy special device.\n                format: int32\n                type: integer\n            type: object\n        type: object\n    ...\nstatus:\n  ...\n\n')),Object(c.b)("p",null,"The dummy adaptor installer YAML file is under the ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"./adaptors/dummy/deploy/e2e"}),Object(c.b)("inlineCode",{parentName:"a"},"adaptors/dummy/deploy/e2e"))," directory, the ",Object(c.b)("inlineCode",{parentName:"p"},"all_in_one.yaml")," includes the device model and the device adaptor, we can apply them into the cluster directly:"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell",metastring:"script",script:!0}),"$ kubectl apply -f https://raw.githubusercontent.com/cnrancher/octopus/master/adaptors/dummy/deploy/e2e/all_in_one.yaml\n")),Object(c.b)("p",null,"expected result:"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{}),"customresourcedefinition.apiextensions.k8s.io/dummyspecialdevices.devices.edge.cattle.io created\ncustomresourcedefinition.apiextensions.k8s.io/dummyprotocoldevices.devices.edge.cattle.io created\nclusterrole.rbac.authorization.k8s.io/octopus-adaptor-dummy-manager-role created\nclusterrolebinding.rbac.authorization.k8s.io/octopus-adaptor-dummy-manager-rolebinding created\ndaemonset.apps/octopus-adaptor-dummy-adaptor created\n\n$ kubectl get all -n octopus-system\nNAME                                      READY   STATUS    RESTARTS   AGE\npod/octopus-limb-w8vcf                    1/1     Running   0          2m27s\npod/octopus-limb-862kh                    1/1     Running   0          2m27s\npod/octopus-limb-797d8                    1/1     Running   0          2m27s\npod/octopus-limb-8w462                    1/1     Running   0          2m27s\npod/octopus-brain-65fdb4ff99-zvw62        1/1     Running   0          2m27s\npod/octopus-adaptor-dummy-adaptor-6xcdz   1/1     Running   0          21s\npod/octopus-adaptor-dummy-adaptor-mmk5l   1/1     Running   0          21s\npod/octopus-adaptor-dummy-adaptor-xnjrf   1/1     Running   0          21s\npod/octopus-adaptor-dummy-adaptor-srsjz   1/1     Running   0          21s\n\nNAME                    TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)    AGE\nservice/octopus-brain   ClusterIP   10.43.92.81    <none>        8080/TCP   2m27s\nservice/octopus-limb    ClusterIP   10.43.143.49   <none>        8080/TCP   2m27s\n\nNAME                                           DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE\ndaemonset.apps/octopus-limb                    4         4         4       4            4           <none>          2m27s\ndaemonset.apps/octopus-adaptor-dummy-adaptor   4         4         4       4            4           <none>          21s\n\nNAME                            READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/octopus-brain   1/1     1            1           2m27s\n\nNAME                                       DESIRED   CURRENT   READY   AGE\nreplicaset.apps/octopus-brain-65fdb4ff99   1         1         1       2m27s\n\n")),Object(c.b)("p",null,"It is worth noting that we have granted the permission to Octopus for managing ",Object(c.b)("inlineCode",{parentName:"p"},"DummySpecialDevice"),"/",Object(c.b)("inlineCode",{parentName:"p"},"DummyProtocolDevice"),":"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell",metastring:"script",script:!0}),"$ kubectl get clusterrolebinding | grep octopus\noctopus-manager-rolebinding                            2m49s\noctopus-adaptor-dummy-manager-rolebinding              43s\n\n")),Object(c.b)("h3",{id:"3-create-device-link"},"3. Create Device Link"),Object(c.b)("p",null,"Next, we are going to connect a device via ",Object(c.b)("inlineCode",{parentName:"p"},"DeviceLink"),". A link consists of 3 parts: ",Object(c.b)("inlineCode",{parentName:"p"},"Adaptor"),", ",Object(c.b)("inlineCode",{parentName:"p"},"Model")," and ",Object(c.b)("inlineCode",{parentName:"p"},"Device spec"),":"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"Adaptor")," describes how to access the device, this connection process calls adaptation. In order to connect a device, we should indicate the name of the adaptor, the name of the device-connectable node and the parameters of this connection."),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"Model")," describes the model of device, it is the ",Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/kubernetes/apimachinery/blob/master/pkg/apis/meta/v1/types.go"}),"TypeMeta")," of the device model CRD."),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"Device spec")," describes the desired status of device, it is determined by the device model CRD. ")),Object(c.b)("p",null,"We can imagine that there is a device named ",Object(c.b)("inlineCode",{parentName:"p"},"living-room-fan")," on the ",Object(c.b)("inlineCode",{parentName:"p"},"edge-worker")," node, we can try to connect it in."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'apiVersion: edge.cattle.io/v1alpha1\nkind: DeviceLink\nmetadata:\n  name: living-room-fan\n  namespace: default\nspec:\n  adaptor:\n    node: edge-worker\n    name: adaptors.edge.cattle.io/dummy\n  model:\n    apiVersion: "devices.edge.cattle.io/v1alpha1"\n    kind: "DummySpecialDevice"\n  template:\n    metadata:\n      labels:\n        device: living-room-fan\n    spec:\n      protocol:\n        location: "living_room"\n      gear: slow\n      "on": true\n\n')),Object(c.b)("p",null,"There are ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"./docs/octopus/state_of_devicelink.md"}),"several states")," of a link, if we found the ",Object(c.b)("strong",{parentName:"p"},"DeviceConnected")," ",Object(c.b)("inlineCode",{parentName:"p"},"PHASE")," is on ",Object(c.b)("strong",{parentName:"p"},"Healthy")," ",Object(c.b)("inlineCode",{parentName:"p"},"STATUS"),", we can query the same name instance of device model CRD, now the device is in our cluster:"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell",metastring:"script",script:!0}),"$ kubectl get devicelink living-room-fan -n default\nNAME              KIND                 NODE          ADAPTOR                         PHASE             STATUS    AGE\nliving-room-fan   DummySpecialDevice   edge-worker   adaptors.edge.cattle.io/dummy   DeviceConnected   Healthy   10s\n\n$ kubectl get dummyspecialdevice living-room-fan -n default -w\nNAME              GEAR   SPEED   AGE\nliving-room-fan   slow   10      32s\nliving-room-fan   slow   11      33s\nliving-room-fan   slow   12      36s\n\n")),Object(c.b)("h3",{id:"4-manage-device"},"4. Manage Device"),Object(c.b)("p",null,"When we want to stop the device, we can do this as below:"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell",metastring:"script",script:!0}),'$ kubectl patch devicelink living-room-fan -n default --type merge --patch \'{"spec":{"template":{"spec":{"on":false}}}}\'\ndevicelink.edge.cattle.io/living-room-fan patched\n')),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{}),"$ kubectl get devicelink living-room-fan -n default\n  NAME              KIND                 NODE          ADAPTOR                         PHASE             STATUS    AGE\n  living-room-fan   DummySpecialDevice   edge-worker   adaptors.edge.cattle.io/dummy   DeviceConnected   Healthy   89s\n\n$ kubectl get dummyspecialdevice living-room-fan -n default\nNAME              GEAR   SPEED   AGE\nliving-room-fan                  117s\n")),Object(c.b)("h2",{id:"workflow"},"Workflow"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-text"}),"                                                                                                                   \n    \u2502          metadata         \u2502                    edge node                      \u2502      devices      \u2502          \n   \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500         \n    \u2502                           \u2502                                                   \u2502                   \u2502          \n                                                                                                                   \n                                                                                                        \u2502          \n                                                                                                                   \n        \u250c \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2510                                          \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                    \u2502          \n          <<Device Model>>                                          \u250c\u2500\u25b6\u2502  adaptor  \u251c\u2510  6                           \n     \u250c\u2500\u2500\u2502        CRD        \u2502                                     4 \u2502  \u2514\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\u25c0\u2500\u2500\u2510               \u2502          \n     \u2502   \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500                                        \u2502   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502                          \n     \u2502                                                              \u2502                   \u2502     .         \u2502          \n    1\u2502                                                              \u2502                   \u2514\u2500\u2500\u2500\u25b6( )          user     \n     \u2502  \u250c \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2510                                       \u2502                     5   '         \u2502          \n     \u2502       DeviceLink                                             \u2502                                              \n     \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524                                       \u2502                                   \u2502          \n     \u2514\u2500\u25b7\u2502       Model       \u2502                                       \u2502                                              \n        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524                                       \u2502                                   \u2502          \n        \u2502      Adaptor      \u2502                                       \u2502                                              \n        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524                                       \u2502                                   \u2502          \n        \u2502     Template      \u2502\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510       \u2502                                              \n        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518            2\u2502                3\u2502       \u2502                                   \u2502          \n                                          \u2502                 \u2502       \u2502                                  \u2500 \u2500         \n                                          \u25bc                 \u2502       \u2514\u2500\u2500\u2500\u2500\u2500\u2510                             \u2502          \n                                \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510       \u2502             \u2502                                        \n                                \u2502       brain       \u2502       \u2502             \u2502                             \u2502          \n                                \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518       \u2502             \u2502                                        \n                                 \u2502                          \u2502             \u2502                             \u2502          \n                                 \u251c\u2500\u25a3  node existed?         \u2502             \u2502                                        \n                                 \u2502   \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500       \u2502             \u2502                             \u2502          \n                                 \u2502                          \u2502             \u2502                                        \n                                 \u2514\u2500\u25a3  model existed?        \u2502             \u2502                             \u2502          \n                                     \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500       \u2502             \u2502                                        \n                                                            \u2502             \u2502                             \u2502          \n                                                            \u2502             \u2502                               octopus  \n                                                            \u25bc             \u2502                             \u2502          \n        \u250c \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2510                     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502                                        \n          <<Device Model>>             \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2502       limb        \u251c\u2510  \u2502 7                           \u2502          \n        \u2502     Instance      \u2502          \u2502          \u2514\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\u25c0\u2500\u2518                                        \n        \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   8      \u2502           \u2514\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                \u2502          \n        \u2502       Spec        \u2502\u25c0\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518            \u2502                                                              \n        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524                       \u251c\u2500\u25a3 adaptor existed?                                \u2502          \n        \u2502      Status       \u2502                       \u2502   \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500                                          \n        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                       \u2502                                                   \u2502          \n                                                    \u251c\u2500\u25a3  device created?                                           \n                                                    \u2502   \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500                               \u2502          \n                                                    \u2502                                                              \n                                                    \u2514\u2500\u25a3 device connected?                               \u2502          \n                                                        \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500                              \u2500 \u2500         \n                                                                                                        \u2502    \n\n")))}d.isMDXComponent=!0},127:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return m}));var a=t(0),o=t.n(a);function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){c(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},c=Object.keys(e);for(a=0;a<c.length;a++)t=c[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)t=c[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=o.a.createContext({}),d=function(e){var n=o.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):r({},n,{},e)),t},p=function(e){var n=d(e.components);return o.a.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},b=Object(a.forwardRef)((function(e,n){var t=e.components,a=e.mdxType,c=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=d(t),b=a,m=p["".concat(i,".").concat(b)]||p[b]||u[b]||c;return t?o.a.createElement(m,r({ref:n},l,{components:t})):o.a.createElement(m,r({ref:n},l))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var c=t.length,i=new Array(c);i[0]=b;var r={};for(var s in n)hasOwnProperty.call(n,s)&&(r[s]=n[s]);r.originalType=e,r.mdxType="string"==typeof e?e:a,i[1]=r;for(var l=2;l<c;l++)i[l]=t[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);