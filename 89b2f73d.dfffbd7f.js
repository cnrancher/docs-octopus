(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{132:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return l})),a.d(t,"rightToc",(function(){return i})),a.d(t,"default",(function(){return j}));var n=a(2),b=a(6),r=(a(0),a(148)),c={id:"modbus",title:"Modbus \u9002\u914d\u5668"},l={id:"cn/adaptors/modbus",title:"Modbus \u9002\u914d\u5668",description:"### \u4ecb\u7ecd",source:"@site/docs/cn/adaptors/modbus.md",permalink:"/docs-octopus/docs/cn/adaptors/modbus",editUrl:"https://github.com/cnrancher/docs-octopus/edit/master/website/docs/cn/adaptors/modbus.md",sidebar:"cn-docs",previous:{title:"\u5173\u4e8e\u9002\u914d\u5668",permalink:"/docs-octopus/docs/cn/adaptors/adaptor"},next:{title:"OPC-UA \u9002\u914d\u5668",permalink:"/docs-octopus/docs/cn/adaptors/opc-ua"}},i=[{value:"\u4ecb\u7ecd",id:"\u4ecb\u7ecd",children:[]},{value:"\u6ce8\u518c\u64cd\u4f5c",id:"\u6ce8\u518c\u64cd\u4f5c",children:[]},{value:"\u6ce8\u518c\u4fe1\u606f",id:"\u6ce8\u518c\u4fe1\u606f",children:[]},{value:"\u652f\u6301\u6a21\u578b",id:"\u652f\u6301\u6a21\u578b",children:[]},{value:"\u652f\u6301\u5e73\u53f0",id:"\u652f\u6301\u5e73\u53f0",children:[]},{value:"\u4f7f\u7528\u65b9\u5f0f",id:"\u4f7f\u7528\u65b9\u5f0f",children:[]},{value:"\u6743\u9650",id:"\u6743\u9650",children:[]},{value:"Modbus DeviceLink YAML",id:"modbus-devicelink-yaml",children:[]},{value:"Modbus Device Spec",id:"modbus-device-spec",children:[]}],O={rightToc:i};function j(e){var t=e.components,a=Object(b.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},O,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h3",{id:"\u4ecb\u7ecd"},"\u4ecb\u7ecd"),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.modbustools.com/modbus.html"}),"Modbus"),"\u662f\u4e3b/\u4ece\u534f\u8bae\uff0c\u8bf7\u6c42\u4fe1\u606f\u7684\u8bbe\u5907\u79f0\u4e3aModbus\u4e3b\u8bbe\u5907\uff0c\u63d0\u4f9b\u4fe1\u606f\u7684\u8bbe\u5907\u4e3aModbus\u4ece\u8bbe\u5907\u3002\n\u5728\u6807\u51c6\u7684Modbus\u7f51\u7edc\u4e2d\uff0c\u6709\u4e00\u4e2a\u4e3b\u8bbe\u5907\u548c\u591a\u8fbe247\u4e2a\u4ece\u8bbe\u5907\uff0c\u6bcf\u4e2a\u4ece\u8bbe\u5907\u5177\u6709\u4ece1\u5230247\u7684\u552f\u4e00\u4ece\u8bbe\u5907\u5730\u5740\u3002\n\u4e3b\u673a\u4e5f\u53ef\u4ee5\u5c06\u4fe1\u606f\u5199\u5165\u4ece\u673a\u3002"),Object(r.b)("p",null,"Modbus\u9002\u914d\u5668\u540c\u65f6\u652f\u6301TCP\u548cRTU\u534f\u8bae\uff0c\u5b83\u5145\u5f53\u4e3b\u8282\u70b9\uff0c\u5e76\u53ef\u5728\u8fb9\u7f18\u4fa7\u8fde\u63a5\u6216\u64cd\u7eb5Modbus\u4ece\u8bbe\u5907\u3002"),Object(r.b)("h3",{id:"\u6ce8\u518c\u64cd\u4f5c"},"\u6ce8\u518c\u64cd\u4f5c"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"\u7ebf\u5708\u5bc4\u5b58\u5668"),"\uff1a\u53ef\u8bfb\u53ef\u5199\uff0c1\u4f4d\uff08\u5173\u95ed/\u6253\u5f00\uff09")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"\u79bb\u6563\u8f93\u5165\u5bc4\u5b58\u5668"),"\uff1a\u53ef\u8bfb\uff0c1\u4f4d\uff08\u5173\u95ed/\u6253\u5f00\uff09")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"\u8f93\u5165\u5bc4\u5b58\u5668"),"\uff1a\u53ef\u8bfb\uff0c16\u4f4d\uff080\u81f365,535\uff09\uff0c\u672c\u8d28\u4e0a\u662f\u6d4b\u91cf\u503c\u548c\u72b6\u6001")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"\u4fdd\u6301\u5bc4\u5b58\u5668"),"\uff1a\u53ef\u8bfb\u53ef\u5199\uff0c16\u4f4d\uff080\u523065,535\uff09\uff0c\u672c\u8d28\u4e0a\u662f\u914d\u7f6e\u503c"))),Object(r.b)("h3",{id:"\u6ce8\u518c\u4fe1\u606f"},"\u6ce8\u518c\u4fe1\u606f"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"Versions"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"Register Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"Endpoint Socket"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"Available"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(r.b)("inlineCode",{parentName:"td"},"v1alpha1")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(r.b)("inlineCode",{parentName:"td"},"adaptors.edge.cattle.io/modbus")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(r.b)("inlineCode",{parentName:"td"},"modbus.sock")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"*")))),Object(r.b)("h3",{id:"\u652f\u6301\u6a21\u578b"},"\u652f\u6301\u6a21\u578b"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"Kind"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"Group"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"Version"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"Available"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(r.b)("inlineCode",{parentName:"td"},"ModbusDevice")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(r.b)("inlineCode",{parentName:"td"},"devices.edge.cattle.io")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(r.b)("inlineCode",{parentName:"td"},"v1alpha1")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"*")))),Object(r.b)("h3",{id:"\u652f\u6301\u5e73\u53f0"},"\u652f\u6301\u5e73\u53f0"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"OS"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Arch"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(r.b)("inlineCode",{parentName:"td"},"linux")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"amd64"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(r.b)("inlineCode",{parentName:"td"},"linux")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"arm"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(r.b)("inlineCode",{parentName:"td"},"linux")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"arm64"))))),Object(r.b)("h3",{id:"\u4f7f\u7528\u65b9\u5f0f"},"\u4f7f\u7528\u65b9\u5f0f"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell",metastring:"script",script:!0}),"$ kubectl apply -f https://raw.githubusercontent.com/cnrancher/octopus/master/adaptors/modbus/deploy/e2e/all_in_one.yaml\n")),Object(r.b)("h3",{id:"\u6743\u9650"},"\u6743\u9650"),Object(r.b)("p",null,"\u5bf9Octopus\u6388\u4e88\u6743\u9650\uff0c\u5982\u4e0b\u6240\u793a\uff1a"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-text"}),"  Resources                                   Non-Resource URLs  Resource Names  Verbs\n  ---------                                   -----------------  --------------  -----\n  modbusdevices.devices.edge.cattle.io         []                 []              [create delete get list patch update watch]\n  modbusdevices.devices.edge.cattle.io/status  []                 []              [get patch update]\n")),Object(r.b)("h3",{id:"modbus-devicelink-yaml"},"Modbus DeviceLink YAML"),Object(r.b)("p",null,"modbus ",Object(r.b)("inlineCode",{parentName:"p"},"DeviceLink")," YAML\u7684\u793a\u4f8b:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml"}),'apiVersion: edge.cattle.io/v1alpha1\nkind: DeviceLink\nmetadata:\n  name: modbus-tcp\nspec:\n  adaptor:\n    node: edge-worker\n    name: adaptors.edge.cattle.io/modbus\n  model:\n    apiVersion: "devices.edge.cattle.io/v1alpha1"\n    kind: "ModbusDevice"\n  template:\n    metadata:\n      labels:\n        device: modbus-tcp\n    spec:\n      protocol:\n        tcp:\n          ip: 192.168.1.3\n          port: 502\n          slaveID: 1\n      properties:\n        - name: temperature\n          description: data collection of temperature sensor\n          readOnly: false\n          visitor:\n            register: HoldingRegister\n            offset: 2\n            quantity: 8\n          value: "33.3"\n          dataType: float\n        - name: temperature-enable\n          description: enable data collection of temperature sensor\n          readOnly: false\n          visitor:\n            register: CoilRegister\n            offset: 2\n            quantity: 1\n          value: "true"\n          dataType: boolean\n\n')),Object(r.b)("h3",{id:"modbus-device-spec"},"Modbus Device Spec"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Parameter"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Scheme"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Required"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"parameters"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Parameter of the modbus device"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#modbusdeviceparamters"}),"ModbusDeviceParamters")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"protocol"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Protocol for accessing the modbus device"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#modbusprotocolconfig"}),"ModbusProtocolConfig")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"properties"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Device properties"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"[]*",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#deviceproperty"}),"DeviceProperty")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"extension"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Integrate with deivce MQTT extension"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#deviceextension"}),"DeviceExtension")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")))),Object(r.b)("h4",{id:"modbusdeviceparamters"},"ModbusDeviceParamters"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Parameter"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Scheme"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Required"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"syncInterval"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Device properties sync interval, default to ",Object(r.b)("inlineCode",{parentName:"td"},"5s")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"timeout"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Device connection timeout, default to ",Object(r.b)("inlineCode",{parentName:"td"},"10s")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")))),Object(r.b)("h4",{id:"modbusprotocolconfig"},"ModbusProtocolConfig"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Parameter"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Scheme"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Required"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"rtu"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Modbus RTU protocol config"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#modbusconfigrtu"}),"ModbusConfigRTU")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"tcp"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Modbus TCP protocol config"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#modbusconfigtcp"}),"ModbusConfigTCP")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")))),Object(r.b)("h4",{id:"modbusconfigrtu"},"ModbusConfigRTU"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Parameter"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Scheme"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Required"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"serialPort"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Device path (e.g. /dev/ttyS0)"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"slaveId"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Slave id of the device"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"baudRate"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Baud rate, a measurement of transmission speed, default to ",Object(r.b)("inlineCode",{parentName:"td"},"19200")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dataBits"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Data bits (5, 6, 7 or 8), default to ",Object(r.b)("inlineCode",{parentName:"td"},"0")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"parity"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"N - None, E - Even, O - Odd (default E) (The use of no parity requires 2 stop bits.)"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"stopBits"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Stop bits: 1 or 2 (default 1)"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")))),Object(r.b)("h4",{id:"modbusconfigtcp"},"ModbusConfigTCP"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Parameter"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Scheme"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Required"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ip"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"IP address of the device"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"port"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"TCP port of the device"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"slaveId"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Slave id of the device"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true")))),Object(r.b)("h4",{id:"deviceproperty"},"DeviceProperty"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Parameter"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Scheme"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Required"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"name"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Property name"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"description"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Property description"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"readOnly"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Check if the device property is readonly, default to false"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"boolean"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dataType"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Property data type, options are ",Object(r.b)("inlineCode",{parentName:"td"},"int, string, float, boolean")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"visitor"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Property visitor config"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#propertyvisitor"}),"PropertyVisitor")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"value"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Set desired value of the property"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")))),Object(r.b)("h4",{id:"propertyvisitor"},"PropertyVisitor"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Parameter"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Scheme"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Required"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"register"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"CoilRegister, DiscreteInputRegister, HoldingRegister, or InputRegister"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"offset"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Offset indicates the starting register number to read/write data"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"quantity"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Limit number of registers to read/write"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"orderOfOperations"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The quantity of registers"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"[]*",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#modbusoperations"}),"ModbusOperations")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")))),Object(r.b)("h4",{id:"modbusoperations"},"ModbusOperations"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Parameter"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Scheme"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Required"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"operationType"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Arithmetic operation type(",Object(r.b)("inlineCode",{parentName:"td"},"Add, Subtract, Multiply, Divide"),")"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"operationValue"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Arithmetic operation value"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false")))),Object(r.b)("h4",{id:"deviceextension"},"DeviceExtension"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"\u5173\u4e8eModbus\u8bbe\u5907\u7684MQTT\u96c6\u6210\u8bf7\u53c2\u8003",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#modbus-devicelink-yaml"}),"example YAML"),"\u3002"),Object(r.b)("li",{parentName:"ul"},"\u53c2\u8003",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"./mqtt-extension"}),"\u4e0eMQTT\u6587\u6863\u96c6\u6210"),"\u4e86\u89e3\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u3002")))}j.isMDXComponent=!0},148:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return m}));var n=a(0),b=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,b=function(e,t){if(null==e)return{};var a,n,b={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(b[a]=e[a]);return b}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(b[a]=e[a])}return b}var O=b.a.createContext({}),j=function(e){var t=b.a.useContext(O),a=t;return e&&(a="function"==typeof e?e(t):l({},t,{},e)),a},p=function(e){var t=j(e.components);return b.a.createElement(O.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return b.a.createElement(b.a.Fragment,{},t)}},o=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,c=e.parentName,O=i(e,["components","mdxType","originalType","parentName"]),p=j(a),o=n,m=p["".concat(c,".").concat(o)]||p[o]||d[o]||r;return a?b.a.createElement(m,l({ref:t},O,{components:a})):b.a.createElement(m,l({ref:t},O))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,c=new Array(r);c[0]=o;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:n,c[1]=l;for(var O=2;O<r;O++)c[O]=a[O];return b.a.createElement.apply(null,c)}return b.a.createElement.apply(null,a)}o.displayName="MDXCreateElement"}}]);